// Code generated by MockGen. DO NOT EDIT.
// Source: twitter.go

// Package collector is a generated GoMock package.
package collector

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockITwitterAPI is a mock of ITwitterAPI interface.
type MockITwitterAPI struct {
	ctrl     *gomock.Controller
	recorder *MockITwitterAPIMockRecorder
}

// MockITwitterAPIMockRecorder is the mock recorder for MockITwitterAPI.
type MockITwitterAPIMockRecorder struct {
	mock *MockITwitterAPI
}

// NewMockITwitterAPI creates a new mock instance.
func NewMockITwitterAPI(ctrl *gomock.Controller) *MockITwitterAPI {
	mock := &MockITwitterAPI{ctrl: ctrl}
	mock.recorder = &MockITwitterAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITwitterAPI) EXPECT() *MockITwitterAPIMockRecorder {
	return m.recorder
}

// GenBearerToken mocks base method.
func (m *MockITwitterAPI) GenBearerToken(APIKey, APISecret string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenBearerToken", APIKey, APISecret)
	ret0, _ := ret[0].(string)
	return ret0
}

// GenBearerToken indicates an expected call of GenBearerToken.
func (mr *MockITwitterAPIMockRecorder) GenBearerToken(APIKey, APISecret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenBearerToken", reflect.TypeOf((*MockITwitterAPI)(nil).GenBearerToken), APIKey, APISecret)
}

// GetTweets mocks base method.
func (m *MockITwitterAPI) GetTweets(token, user, start string, rts bool) []map[string]interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTweets", token, user, start, rts)
	ret0, _ := ret[0].([]map[string]interface{})
	return ret0
}

// GetTweets indicates an expected call of GetTweets.
func (mr *MockITwitterAPIMockRecorder) GetTweets(token, user, start, rts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTweets", reflect.TypeOf((*MockITwitterAPI)(nil).GetTweets), token, user, start, rts)
}
